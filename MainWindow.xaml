<mah:MetroWindow x:Class="Mini_Spotify_Controller.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Mini_Spotify_Controller"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:converters="clr-namespace:Mini_Spotify_Controller.converter"
        xmlns:viewmodel="clr-namespace:Mini_Spotify_Controller.viewmodel"
        Topmost="{Binding Topmost}"
        Title="{Binding Path=User.DisplayName}"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel}"
        Width="480" Height="100" ResizeMode="NoResize"
        mc:Ignorable="d">
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding Path=AuthorizeCommand}" />
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <mah:MetroWindow.Resources>
        <converters:PlaybackStateToNowPlayingConverter x:Key="PlaybackStateToNowPlayingConverter" />
        <converters:PlaybackStateButtonConverter x:Key="PlaybackStateButtonConverter" />
        <converters:PlaybackStateDurationConverter x:Key="PlaybackStateDurationConverter" />
        <converters:PlaybackStateToProgressConverter x:Key="PlaybackStateToProgressConverter" />
        <converters:PlaybackStateImageConverter x:Key="PlaybackStateImageConverter" />
        <converters:PlaybackStateToLikedConverter x:Key="PlaybackStateToLikedConverter" />
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Command="{Binding GetAudioMetricsCommand}" ToolTip="Stats for Nerds">
                <iconPacks:PackIconMaterial Width="16" Height="16" Kind="ChartBar" />
            </Button>
            <Button Command="{Binding RefreshCommand}" ToolTip="Refresh Playback State">
                <iconPacks:PackIconMaterial Width="16" Height="16" Kind="Refresh" />
            </Button>
            <Button Command="{Binding RandomizeCommand}" ToolTip="Randomize">
                <iconPacks:PackIconMaterial Width="16" Height="16" Kind="Shuffle" />
            </Button>
            <Button Content="Settings" Command="{Binding OpenSettingsCommand}" />
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <UniformGrid Columns="2">
            <Button VerticalAlignment="Center" HorizontalAlignment="Center" Width="32" Height="32" Margin="8,0,0,0" Style="{DynamicResource MahApps.Styles.Button.Circle}" ToolTip="Add to My Library" Command="{Binding ToggleLikedCommand}">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="Heart">
                        <iconPacks:PackIconMaterial.Style>
                            <Style TargetType="iconPacks:PackIconMaterial">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=PlaybackState.IsLiked}" Value="True">
                                        <Setter Property="Foreground" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=PlaybackState.IsLiked}" Value="False">
                                        <Setter Property="Foreground" Value="LightGray" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconMaterial.Style>
                    </iconPacks:PackIconMaterial>
                </Button.Content>
            </Button>
            <Button VerticalAlignment="Center" HorizontalAlignment="Center" Width="32" Height="32" Margin="4" Style="{DynamicResource MahApps.Styles.Button.Circle}" ToolTip="Share" Command="{Binding GetShareUrlCommand}">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="ShareVariant" />
                </Button.Content>
            </Button>
        </UniformGrid>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" Margin="8,4,8,4">
            <Button Command="{Binding Path=PreviousCommand}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MahApps.Styles.Button.Circle}" Width="32" Height="32" Background="Bisque" Margin="0,0,4,0">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="SkipPrevious" />
                </Button.Content>
            </Button>
            <Button Command="{Binding Path=TogglePlayCommand}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource MahApps.Styles.Button.Circle}" Width="48" Height="48">
                <iconPacks:PackIconMaterial Kind="{Binding Path=PlaybackState, Converter={StaticResource PlaybackStateButtonConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Button>
            <Button Command="{Binding Path=NextCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource MahApps.Styles.Button.Circle}" Width="32" Height="32" Background="Bisque" Margin="4,0,0,0">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="SkipNext" />
                </Button.Content>
            </Button>

        </StackPanel>

        <TextBlock Grid.Row="0" Grid.Column="2" Margin="8" Text="{Binding Path=PlaybackState, Converter={StaticResource PlaybackStateToNowPlayingConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" TextWrapping="NoWrap">
            <TextBlock.ToolTip>
                <ToolTip Content="{Binding Path=PlaybackState, Converter={StaticResource PlaybackStateToNowPlayingConverter}}" />
            </TextBlock.ToolTip>
        </TextBlock>

        <Image Grid.Row="0" Grid.Column="3" Margin="8" Source="{Binding Path=PlaybackState, Converter={StaticResource PlaybackStateImageConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" Width="48" Height="48" />

        <Slider Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,-4,0,0" Style="{DynamicResource MahApps.Styles.Slider.Flat}" Value="{Binding Path=PlaybackState, Converter={StaticResource PlaybackStateToProgressConverter}, Mode=OneWay}" Minimum="0" Maximum="{Binding Path=PlaybackState, Converter={StaticResource PlaybackStateDurationConverter}, Mode=OneWay}" SmallChange="30" LargeChange="60">
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="PreviewMouseDown">
                    <behaviors:InvokeCommandAction Command="{Binding Path=SeekStartCommand}" />
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="PreviewMouseUp">
                    <behaviors:InvokeCommandAction Command="{Binding Path=SeekEndCommand}" CommandParameter="{Binding Path=Value, RelativeSource={RelativeSource AncestorType=Slider}}" />
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </Slider>

    </Grid>
</mah:MetroWindow>
